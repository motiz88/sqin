{"version":3,"sources":["src/getCanonicalId.js"],"names":[],"mappings":";;;;;qBASS,cAAc;;;;oBATN,MAAM;;;;oBACR,OAAO;;;;kBACP,IAAI;;;;AAOnB,SAAS,cAAc,CAAC,EAAE,EAAE,OAAO,EAAE,aAAa,EAAE;;;;;;;;AAQhD,QAAI,UAAU,GAAG,kBAAK,OAAO,CAAC,OAAO,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC;;AAGjD,QAAI,UAAU,GAAG,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;;AAE9B,WAAO,gBAAG,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAChC,GAAG,CAAC,UAAA,GAAG;eAAI,UAAU,GAAG,GAAG;KAAA,CAAC,CAC5B,SAAS,CAAC,UAAS,WAAW,EAAE;AAC7B,eAAO,gBAAG,UAAU,CAAC,WAAW,CAAC,kBAAG,MAAM,CAAC,WAAW,CAAC,CAAC,CACnD,MAAM,CAAC,OAAO,CAAC;SACf,GAAG,CAAC,YAAW;AACZ,mBAAO,WAAW,CAAC;SACtB,CAAC,CAAC;KACV,CAAC,CACD,KAAK,EAAE,SACF,CAAC;eAAM,gBAAG,UAAU,SAAM,CAAC,IAAI,KAAK,CAAC,uBAAuB,GAAG,EAAE,GAAG,MAAM,IAAI,OAAO,IAAI,GAAG,CAAA,AAAC,CAAC,CAAC;KAAA,CAAC,CAAC;;;;CAI9G","file":"src/getCanonicalId.js","sourcesContent":["import path from 'path';\r\nimport fs from 'mz/fs';\r\nimport Rx from 'rx';\r\n\r\nexport\r\ndefault\r\n\r\nfunction getCanonicalId(id, baseDir, resolvedCache) {\r\n    // if (!resolvedCache)\r\n    //     resolvedCache = {};\r\n\r\n    // if (id in resolvedCache)\r\n    //     return Promise.resolve(resolvedCache[id]);\r\n\r\n    // console.log('   looking up', id, '...');\r\n    var resolvedId = path.resolve(baseDir || '', id);\r\n\r\n\r\n    var extensions = ['', '.sql'];\r\n\r\n    return Rx.Observable.from(extensions)\r\n        .map(ext => resolvedId + ext)\r\n        .concatMap(function(attemptedId) {\r\n            return Rx.Observable.fromPromise(fs.exists(attemptedId))\r\n                .filter(Boolean) // filter falsy values\r\n                .map(function() {\r\n                    return attemptedId;\r\n                });\r\n        })\r\n        .first()\r\n        .catch(() => Rx.Observable.throw(new Error('Could not resolve ID ' + id + ' in ' + (baseDir || '.'))));\r\n    // .tap(resolvedId => {\r\n    //     resolvedCache[id] = resolvedId;\r\n    // });\r\n}\r\n"]}