{"version":3,"sources":["src/resolveDeps.js"],"names":[],"mappings":";;;;;qBA0CS,WAAW;;;;4CA1CqB,gCAAgC;;;;+BAC7C,mBAAmB;;;;kBAChC,IAAI;;;;gCACA,oBAAoB;;;;AAEvC,SAAS,gBAAgB,CAAC,MAAM,EAAE,YAAY,EAAE,KAAK,EAAE;AACnD,SAAK,GAAG,KAAK,IAAI,EAAE,CAAC;AACpB,gBAAY,GAAG,YAAY,IAAI,EAAE,CAAC;;AAElC,QAAI,MAAM,IAAI,YAAY,EAAE;AACxB,YAAI,cAAc,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3C,YAAI,cAAc,KAAK,CAAC,CAAC,EACrB,MAAM,IAAI,KAAK,CAAC,oCAAoC,GAAG,KAAK,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,UAAA,CAAC;mBAAI,IAAI,GAAG,CAAC;SAAA,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC3I,eAAO,gBAAG,UAAU,CAAC,KAAK,EAAE,CAAC;KAChC;;AAED,gBAAY,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;;AAE5B,QAAI,OAAO,GAAG,+CAA6B,MAAM,CAAC,CAAC;AACnD,SAAK,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;;AAE7B,QAAI,SAAS,GAAG,OAAO,CAClB,OAAO,EAAE,CACT,GAAG,CAAC,UAAA,IAAI;eAAK;AACV,cAAE,EAAE,MAAM;AACV,gBAAI,EAAJ,IAAI;SACP;KAAC,CAAC,CAAC;;AAER,QAAI,UAAU,GAAG,OAAO,CACnB,OAAO,CACJ,UAAA,KAAK;eAAI,gBAAgB,CAAC,KAAK,EAAE,YAAY,EAAE,KAAK,CAAC;KAAA,CACxD,CAAC;;AAEN,WAAO,SAAS,CACX,MAAM,CAAC,UAAU,CAAC,CAAC;CAC3B;;AAOD,SAAS,WAAW,CAAC,aAAa,EAAE;AAChC,QAAI,OAAO,aAAa,KAAK,QAAQ,IAAI,EAAE,QAAQ,IAAI,aAAa,CAAA,AAAC,EACjE,aAAa,GAAG,CAAC,aAAa,CAAC,CAAC;;AAEpC,QAAI,YAAY,GAAG,EAAE,CAAC;;AAEtB,WAAO,gBAAG,UAAU,CAAC,MAAM,CAAC,UAAA,QAAQ,EAAI;AACpC,YAAI,MAAM,GAAG,EAAE,CAAC;AAChB,eAAO,kCAAgB,aAAa,CAAC,CAChC,SAAS,CAAC,UAAA,EAAE;mBAAI,gBAAgB,CAAC,EAAE,EAAE,YAAY,CAAC;SAAA,CAAC;;SAEnD,OAAO,CAAC,UAAA,KAAK,EAAI;AACd,kBAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC;SACjC,EAAE,UAAA,KAAK;mBAAI,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC;SAAA,EAAE,YAAM;AACvC,oBAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACxB,oBAAQ,CAAC,SAAS,EAAE,CAAC;SACxB,CAAC,CAAC;KACN,CAAC,CACL,GAAG,CAAC,8BAAO,UAAU,CAAC,CACtB,GAAG,CAAC,UAAA,MAAM;eAAI,MAAM,CAAC,QAAQ;KAAA,CAAC,CAC9B,OAAO,CAAC,gBAAG,UAAU,CAAC,IAAI,CAAC,CAAC;;;CAIhC","file":"src/resolveDeps.js","sourcesContent":["import extractCanonicalDepsFromFile from './extractCanonicalDepsFromFile';\r\nimport getCanonicalIds from './getCanonicalIds';\r\nimport Rx from 'rx';\r\nimport depres from 'depres/dist/depres';\r\n\r\nfunction expandNestedDeps(rootId, visitedCache, stack) {\r\n    stack = stack || [];\r\n    visitedCache = visitedCache || {};\r\n\r\n    if (rootId in visitedCache) {\r\n        var priorReference = stack.indexOf(rootId);\r\n        if (priorReference !== -1)\r\n            throw new Error('Circular reference detected:\\n    ' + stack.slice(priorReference).concat([rootId]).map(s => '  ' + s).join('\\n -->'));\r\n        return Rx.Observable.empty();\r\n    }\r\n\r\n    visitedCache[rootId] = true;\r\n\r\n    var obsDeps = extractCanonicalDepsFromFile(rootId);\r\n    stack = stack.concat(rootId);\r\n\r\n    var rootEntry = obsDeps\r\n        .toArray()\r\n        .map(deps => ({\r\n            id: rootId,\r\n            deps\r\n        }));\r\n\r\n    var depEntries = obsDeps\r\n        .flatMap(\r\n            depId => expandNestedDeps(depId, visitedCache, stack)\r\n        );\r\n\r\n    return rootEntry\r\n        .concat(depEntries);\r\n}\r\n\r\nexport\r\ndefault\r\n\r\nfunction resolveDeps(entryPointIds) {\r\n    if (typeof entryPointIds !== 'object' || !('length' in entryPointIds))\r\n        entryPointIds = [entryPointIds];\r\n\r\n    var visitedCache = {};\r\n\r\n    return Rx.Observable.create(observer => {\r\n        var depMap = {};\r\n        return getCanonicalIds(entryPointIds)\r\n            .concatMap(id => expandNestedDeps(id, visitedCache))\r\n            //.distinct(entry => entry.id)\r\n            .forEach(entry => {\r\n                depMap[entry.id] = entry.deps;\r\n            }, error => observer.onError(error), () => {\r\n                observer.onNext(depMap);\r\n                observer.completed();\r\n            });\r\n        })\r\n    .map(depres.resolveMap)\r\n    .map(result => result.resolved)\r\n    .flatMap(Rx.Observable.from);\r\n\r\n\r\n    //return Promise.resolve(null);\r\n}\r\n"]}